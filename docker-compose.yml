# docker compose build - используем эту команду, если меняли что-то в Dockerfile
# docker compose up - если изменили только docker-compose

version: "3.8"
services:
  # nginx:
  #   build:
  #     context: .
  #     dockerfile: "Dockerfile.nginx"
  #   container_name: booking_nginx
  #   ports:
  #     - 80:80
  #     - 443:443
  #   links:
  #     - booking
  #     - flower

  db:
    image: postgres:15
    container_name: candle_db
    volumes:
      - postgresdata:/var/lib/postgresql/data
    env_file: # Файл с переменными окружения (Вместо environment)
      - .env-non-dev
#    ports:
#      - 5432:5432 # Порт нужен, только если нам нужен доступ к контейнеру напрямую

  redis:
    image: redis:7
    container_name: candle_redis

  booking:
    image: candle_app
    build:
      context: .
    container_name: candle_app
    env_file:
      - .env-non-dev
    depends_on: # Запускаем только после запуска БД и Redis (depends on = зависит от)
      - db
      - redis
    # Если не работает эта команда, используйте закомментированную
    command: ["/candle/docker/app.sh"]
    # command: sh -c "alembic upgrade head && gunicorn app.main:app --workers 4 --worker-class uvicorn.workers.UvicornWorker --bind=0.0.0.0:8000"
    ports:
      - 7777:8000

  celery:
    image: candle_celery
    build:
      context: . # celery это библиотека, у неё нет образа, берём из основного билда
    container_name: candle_celery
    # Если не работает эта команда, используйте закомментированную
    command: ["/candle/docker/celery.sh", "celery"] # Второй аргумен для if/elif в скрипте
    # command: sh -c "celery --app=app.tasks.celery:celery worker -l INFO"
    env_file:
      - .env-non-dev
    depends_on:
      - redis

  flower:
    image: candle_flower
    build:
      context: . # flower это библиотека, у неё нет образа, берём из основного билда
    container_name: candle_flower
    # Если не работает эта команда, используйте закомментированную
    command: ["/candle/docker/celery.sh", "flower"]
    # command: sh -c "celery --app=app.tasks.celery:celery flower"
    # При запуске через nginx необходимо запускать команду ниже для корректной работы js и css
    # command: sh -c "celery --app=app.tasks.celery:celery flower --url_prefix=/flower"
    env_file:
      - .env-non-dev
    depends_on:
      - redis
    ports:
      - 5555:5555

volumes:
  postgresdata:




